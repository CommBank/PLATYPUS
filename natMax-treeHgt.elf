%% Example Twelf code corresponding to parts of exercises 2.1 & 2.2 in PFPL (2ed draft) 
%% From the end of the second PLATYPUS session (Chapters 1 & 2)
%% Type check and execute the query via http://twelf.org/live/ 
%% or download Twelf from http://twelf.org/wiki/Download

%%% Unary natural numbers
nat : type.
zero : nat.
succ : nat -> nat.

%%% Maximum as a ternary judgment
max : nat -> nat -> nat -> type.
maxZero1 : max zero N N.        
maxZero2 : max (succ M) zero (succ M).            
maxSucc  : max (succ M) (succ N) (succ P)
            <- max M N P.

%%% Binary trees
tree : type.
empty : tree.
node : tree -> tree -> tree.

%%% Height of a binary tree
hgt : tree -> nat -> type.
hgtEmpty : hgt empty zero.
hgtNode  : hgt (node T1 T2) (succ N)
            <- hgt T1 N1
            <- hgt T2 N2
            <- max N1 N2 N.


%%% A query that finds the height of a particular tree 
%%% (with 1 answer expected from 1 attempt).
%query 1 1 hgt (node (node empty empty) empty) N.

%% The same query with the derivation D of the query goal also output.
%query 1 1 D : hgt (node (node empty empty) empty) N.


%% Totality: tell Twelf to semi-automatically prove the existence part of exercise 2.1
            
%%% Specifies that max is total: with N1 and N2 inputs, there's always an output N3.
%mode max +N1 +N2 -N3.
%%% A hint on what combinations of bound variables can occur - here there are none.
%worlds () (max _ _ _).
%%% Tell Twelf to attempt to prove the above totality by induction on N1.
%total N1 (max N1 _ _).

%%% Tell Twelf to show uniqueness too.
%unique max +N1 +N2 -1N3.
